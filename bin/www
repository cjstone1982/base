
//依赖加载
var app = require('../app');
var debug = require('debug')('base:server');
var http = require('http');

//数据库及启动端口设置
var settings=require('../settings') 

// var port = normalizePort(process.env.PORT || settings.webport)
var port = settings.webport
app.set('port', port)

//创建HTTP服务器实例
var server = http.createServer(app)
server.listen(port)

//HTTP异常事件处理函数

server.on('error', onError)
server.on('listening', onListening)

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' 权限不够，需要提升权限')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' 端口已经被使用了')
      process.exit(1)
      break
    default:
      throw error
  }
}

// 事件绑定函数
function onListening() {
  var addr = server.address()
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  debug('Listening on ' + bind)
}
